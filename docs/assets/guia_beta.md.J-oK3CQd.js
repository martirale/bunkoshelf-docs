import{_ as s,c as i,o as e,ag as n}from"./chunks/framework.KLbWPeN7.js";const k=JSON.parse('{"title":"Instalación (beta)","description":"","frontmatter":{},"headers":[],"relativePath":"guia/beta.md","filePath":"guia/beta.md","lastUpdated":1750218095000}'),t={name:"guia/beta.md"};function l(o,a,r,p,d,h){return e(),i("div",null,a[0]||(a[0]=[n(`<h1 id="instalacion-beta" tabindex="-1">Instalación (beta) <a class="header-anchor" href="#instalacion-beta" aria-label="Permalink to &quot;Instalación (beta)&quot;">​</a></h1><p>Esta es una <strong>versión preliminar</strong> publicada en <a href="https://hub.docker.com/r/itsmrtr/bunkoshelf" target="_blank" rel="noreferrer">Docker Hub</a>, pensada para pruebas y retroalimentación temprana. Aunque es funcional, aún puede contener errores o cambios pendientes, por lo que no se recomienda para usar con tu biblioteca real. Si decides probarla, basta con crear un <code>compose.yml</code>, o bien configurar un stack en <strong>Portainer</strong>.</p><h2 id="instalacion" tabindex="-1">Instalación <a class="header-anchor" href="#instalacion" aria-label="Permalink to &quot;Instalación&quot;">​</a></h2><p>Antes de instalar esta versión, asegurate de tener ya desplegada la imagen <code>:new</code>. Luego, puedes actualizar a la <code>beta</code> modificando la etiqueta de la imagen en tu <code>compose.yml</code>.</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-qQ15S" id="tab-8Ycy_44" checked><label data-title="Paso 1 (instalar)" for="tab-8Ycy_44">Paso 1 (instalar)</label><input type="radio" name="group-qQ15S" id="tab-OfAOQJL"><label data-title="Paso 2 (actualizar)" for="tab-OfAOQJL">Paso 2 (actualizar)</label></div><div class="blocks"><div class="language-yaml vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">services</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  bunkoshelf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">itsmrtr/bunkoshelf:new</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    container_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">bunkoshelf</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    restart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">unless-stopped</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    ports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;3443:443&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">./bunko_db:/app/prisma/data</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">./public/covers:/app/public/covers</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/path/to/your/library/manga:/library/manga</span></span></code></pre></div><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">services</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  bunkoshelf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">itsmrtr/bunkoshelf:beta</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    container_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">bunkoshelf</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    restart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">unless-stopped</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    ports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;3443:443&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">./bunko_db:/app/prisma/data</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">./public/covers:/app/public/covers</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/path/to/your/library/manga:/library/manga</span></span></code></pre></div></div></div><h2 id="iniciar-el-contenedor" tabindex="-1">Iniciar el contenedor <a class="header-anchor" href="#iniciar-el-contenedor" aria-label="Permalink to &quot;Iniciar el contenedor&quot;">​</a></h2><h3 id="linea-de-comandos" tabindex="-1">Línea de comandos <a class="header-anchor" href="#linea-de-comandos" aria-label="Permalink to &quot;Línea de comandos&quot;">​</a></h3><p>Si estás haciendo el proceso desde la terminal, dentro del directorio donde tengas el <code>compose.yml</code>, ejecuta el siguiente comando:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span></span></code></pre></div><h3 id="portainer" tabindex="-1">Portainer <a class="header-anchor" href="#portainer" aria-label="Permalink to &quot;Portainer&quot;">​</a></h3><p>Si por el contrario, estás en <strong>Portainer</strong>, debes ir al final de la página, en la sección <strong>&quot;Actions</strong> y dar clic al botón <code>Deploy the stack</code>.</p><h2 id="actualizar-el-contenedor" tabindex="-1">Actualizar el contenedor <a class="header-anchor" href="#actualizar-el-contenedor" aria-label="Permalink to &quot;Actualizar el contenedor&quot;">​</a></h2><h3 id="linea-de-comandos-1" tabindex="-1">Línea de comandos <a class="header-anchor" href="#linea-de-comandos-1" aria-label="Permalink to &quot;Línea de comandos&quot;">​</a></h3><p>Cuando haya una nueva imagen <code>beta</code> disponible, puedes actualizar ejecutando los siguientes comandos:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bunkoshelf</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span></span></code></pre></div><h3 id="portainer-1" tabindex="-1">Portainer <a class="header-anchor" href="#portainer-1" aria-label="Permalink to &quot;Portainer&quot;">​</a></h3><p>Si estás usando <strong>Portainer</strong>, el proceso es similar.</p><ol><li>En la sección <strong>&quot;Stacks&quot;</strong>, entra al stack correspondiente a <strong>Bunko Shelf</strong>.</li><li>Una vez dentro, haz clic en la pestaña <strong>&quot;Editor&quot;</strong>.</li><li>Debajo del editor, verás un botón <code>Update the stack</code> al cual hay que dar clic.</li><li>Se abrirá un modal donde deberás activar <code>Re-pull image and redeploy</code>.</li><li>Finalmente, haz clic en el botón <code>Update</code> y espera a que termine la actualización.</li></ol><h2 id="volumenes" tabindex="-1">Volúmenes <a class="header-anchor" href="#volumenes" aria-label="Permalink to &quot;Volúmenes&quot;">​</a></h2><p><strong>Es requisito</strong> definir en el <code>compose.yml</code> o en el comando para <code>Docker CLI</code> la ruta real y absoluta de la biblioteca.</p><table tabindex="0"><thead><tr><th>Ruta</th><th>Tipo</th><th>Descripción</th></tr></thead><tbody><tr><td><code>./bunko_db</code></td><td>Directorio</td><td>Persistencia de la base de datos. <strong>No modificar</strong>.</td></tr><tr><td><code>./public/covers</code></td><td>Directorio</td><td>Portadas extraídas de los mangas durante el escaneo de la biblioteca. <strong>No modificar</strong>.</td></tr><tr><td><code>/path/to/your/library/manga</code></td><td>Montaje</td><td><strong>Ruta real de la biblioteca en el host.</strong> Debe ser una ruta válida en el sistema de archivos.</td></tr></tbody></table>`,21)]))}const u=s(t,[["render",l]]);export{k as __pageData,u as default};

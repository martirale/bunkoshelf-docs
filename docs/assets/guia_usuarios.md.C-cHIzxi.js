import{_ as o,c as e,o as i,ag as r}from"./chunks/framework.KLbWPeN7.js";const g=JSON.parse('{"title":"Usuarios","description":"","frontmatter":{},"headers":[],"relativePath":"guia/usuarios.md","filePath":"guia/usuarios.md","lastUpdated":1750023202000}'),s={name:"guia/usuarios.md"};function n(l,a,u,t,d,c){return i(),e("div",null,a[0]||(a[0]=[r('<h1 id="usuarios" tabindex="-1">Usuarios <a class="header-anchor" href="#usuarios" aria-label="Permalink to &quot;Usuarios&quot;">​</a></h1><p><strong>Bunko Shelf</strong> tiene dos tipos de usuarios:</p><ul><li><strong>Administrador:</strong> Es el propietario del servidor. Este usuario tiene control total sobre el servidor y puede agregar y eliminar usuarios.</li><li><strong>Normal:</strong> Usuario con acceso al servidor. Este usuario tiene acceso mayoritario de solo lectura, con opciones de exclusión.</li></ul><p>Si <strong>Bunko Shelf</strong> no detecta en su inicio a un usuario administrador, automáticamente generará uno con las siguientes credenciales:</p><ul><li><strong>Usuario:</strong> <code>bunko</code></li><li><strong>Contraseña:</strong> <code>admin123</code></li></ul><h2 id="gestion" tabindex="-1">Gestión <a class="header-anchor" href="#gestion" aria-label="Permalink to &quot;Gestión&quot;">​</a></h2><div class="warning custom-block"><p class="custom-block-title">AVISO</p><p>Las siguientes funcionalidades son exclusivas del usuario <strong>administrador</strong>.</p></div><h3 id="creacion-de-usuarios" tabindex="-1">Creación de usuarios <a class="header-anchor" href="#creacion-de-usuarios" aria-label="Permalink to &quot;Creación de usuarios&quot;">​</a></h3><ol><li>En la sección <code>Ajustes &gt; Usuarios</code>, veremos una lista con todos los usuarios existentes.</li><li>Hacemos clic en el botón <code>Crear usuario</code> en la parte superior de la lista, se abrirá un modal con un formulario.</li><li>Rellenamos el formulario: <ul><li><strong>Usuario:</strong> El nombre de usuario del usuario. Se utiliza para iniciar sesión en el servidor.</li><li><strong>Contraseña:</strong> La contraseña del usuario. Se utiliza para iniciar sesión en el servidor.</li><li><strong>Nombre y apellido:</strong> Campos opcionales para personalización del usuario.</li><li><strong>Año de nacimiento:</strong> Campo opcional. Necesario en caso de aplicar <a href="/referencia/control-parental.html">control parental</a>.</li><li><strong>Privilegios de admin:</strong> Determina si el usuario será administrador o usuario normal.</li></ul></li><li>Finalmente hacemos clic en el botón <code>Crear usuario</code> y habremos terminado.</li></ol><h3 id="editar-un-usuario" tabindex="-1">Editar un usuario <a class="header-anchor" href="#editar-un-usuario" aria-label="Permalink to &quot;Editar un usuario&quot;">​</a></h3><ol><li>En la sección <code>Ajustes &gt; Usuarios</code>, veremos la lista con los usuarios existentes.</li><li>Al final de la tabla ubicaremos una columna llamada <code>Editar</code>.</li><li>Haremos clic en el botón de edición al final de la fila del usuario a eitar abriendo así un modal con un formulario.</li><li>Este formulario tendrá los mismos campos que el formulario de creación de usuarios.</li><li>Una vez hechos los cambios, damos clic al botón <code>Actualizar usuario</code>.</li></ol><h3 id="eliminar-un-usuario" tabindex="-1">Eliminar un usuario <a class="header-anchor" href="#eliminar-un-usuario" aria-label="Permalink to &quot;Eliminar un usuario&quot;">​</a></h3><ol><li>Realizamos los pasos 1, 2 y 3 anteriores.</li><li>En lugar de modificar el formulario, daremos clic al botón rojo <code>Eliminar usuario</code>.</li></ol><h2 id="seguriad" tabindex="-1">Seguriad <a class="header-anchor" href="#seguriad" aria-label="Permalink to &quot;Seguriad&quot;">​</a></h2><p>Actualmente, <strong>Bunko Shelf</strong> no exige ningún requisito de complejidad de contraseñas. <strong>Esto puede cambiar si hay suficiente demanda.</strong> En general, <strong>Bunko Shelf</strong> sigue un modelo de seguridad estándar aplicando un <code>hash</code> a la contraseña al momento de almacenarla.</p>',15)]))}const p=o(s,[["render",n]]);export{g as __pageData,p as default};

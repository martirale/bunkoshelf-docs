import{_ as a,c as i,o as n,ag as e}from"./chunks/framework.KLbWPeN7.js";const c=JSON.parse('{"title":"Instalación alternativa","description":"","frontmatter":{},"headers":[],"relativePath":"guia/instalacion-alternativa.md","filePath":"guia/instalacion-alternativa.md","lastUpdated":1748048556000}'),t={name:"guia/instalacion-alternativa.md"};function l(p,s,r,h,o,d){return n(),i("div",null,s[0]||(s[0]=[e(`<h1 id="instalacion-alternativa" tabindex="-1">Instalación alternativa <a class="header-anchor" href="#instalacion-alternativa" aria-label="Permalink to &quot;Instalación alternativa&quot;">​</a></h1><h2 id="proxy-inverso" tabindex="-1">Proxy inverso <a class="header-anchor" href="#proxy-inverso" aria-label="Permalink to &quot;Proxy inverso&quot;">​</a></h2><p>Un proxy inverso es un intermediario que recibe las solicitudes de los usuarios y las reenvía al servidor correspondiente, permitiendo gestionar conexiones, mejorar seguridad y habilitar funcionalidades como HTTPS. En nuestro caso, el proxy se usa principalmente para ofrecer acceso seguro mediante HTTPS a la aplicación, que requiere un certificado válido para el correcto manejo de la autenticación.</p><p>Para esta instalación alternativa, usaremos un stack de Docker Compose que incluye una instancia de <a href="https://nginxproxymanager.com/" target="_blank" rel="noreferrer">Nginx Proxy Manager</a> para que puedas gestionar el certificado SSL y el acceso seguro a <strong>Bunko Shelf.</strong></p><div class="warning custom-block"><p class="custom-block-title">DOMINIO OBLIGATORIO</p><p>El proxy inverso requiere de un dominio (o subdominio) real y válido para funcionar.</p></div><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group--2e32" id="tab-ZlBbLGz" checked><label data-title="compose.yml" for="tab-ZlBbLGz">compose.yml</label></div><div class="blocks"><div class="language-yaml vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">services</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  nginx-proxy-manager</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">jc21/nginx-proxy-manager:latest</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    container_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nginx_proxy_manager</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    restart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">unless-stopped</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    ports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;80:80&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;81:81&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;443:443&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">./data:/data</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">./letsencrypt:/etc/letsencrypt</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  bunkoshelf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">itsmrtr/bunkoshelf:latest</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    container_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">bunkoshelf</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    restart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">unless-stopped</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    expose</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;3000&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">bunko_db:/app/prisma/data</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/path/to/your/library/manga:/library/manga</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">./public/covers:/app/public/covers</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  bunko_db</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span></code></pre></div></div></div><h3 id="iniciar-el-stack" tabindex="-1">Iniciar el stack <a class="header-anchor" href="#iniciar-el-stack" aria-label="Permalink to &quot;Iniciar el stack&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span></span></code></pre></div><h3 id="actualizar-el-contenedor" tabindex="-1">Actualizar el contenedor <a class="header-anchor" href="#actualizar-el-contenedor" aria-label="Permalink to &quot;Actualizar el contenedor&quot;">​</a></h3><p>Cuando haya una nueva imagen disponible, puedes actualizar usando estos comandos:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span></span></code></pre></div><h2 id="volumenes" tabindex="-1">Volúmenes <a class="header-anchor" href="#volumenes" aria-label="Permalink to &quot;Volúmenes&quot;">​</a></h2><p><strong>Es requisito</strong> definir en el <code>compose.yml</code> la ruta real y absoluta de la biblioteca.</p><table tabindex="0"><thead><tr><th>Ruta</th><th>Tipo</th><th>Descripción</th></tr></thead><tbody><tr><td><code>./data:/data</code></td><td>Volumen</td><td>Persistencia de datos de Nginx Proxy Manager. <strong>No modificar</strong>.</td></tr><tr><td><code>./letsencrypt:/etc/letsencrypt</code></td><td>Volumen</td><td>Persistencia de datos de Let&#39;s Encrypt. <strong>No modificar</strong>.</td></tr><tr><td><code>bunko_db</code></td><td>Volumen</td><td>Persistencia de la base de datos. <strong>No modificar</strong>.</td></tr><tr><td><code>/path/to/your/library/manga</code></td><td>Montaje</td><td><strong>Ruta real de la biblioteca en el host.</strong> Debe ser una ruta válida en el sistema de archivos.</td></tr><tr><td><code>./public/covers</code></td><td>Directorio</td><td>Portadas extraídas de los mangas durante el escaneo de la biblioteca. <strong>No modificar</strong>.</td></tr></tbody></table><h2 id="monitoreo" tabindex="-1">Monitoreo <a class="header-anchor" href="#monitoreo" aria-label="Permalink to &quot;Monitoreo&quot;">​</a></h2><p>Para supervisar los registros del contenedor, puedes utilizar el siguiente comando:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> logs</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span></span></code></pre></div>`,17)]))}const g=a(t,[["render",l]]);export{c as __pageData,g as default};

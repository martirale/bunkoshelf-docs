import{_ as t,C as o,c as r,o as n,j as e,ag as s,a as i,G as d}from"./chunks/framework.KLbWPeN7.js";const x=JSON.parse('{"title":"Changelog","description":"","frontmatter":{},"headers":[],"relativePath":"otros/changelog.md","filePath":"otros/changelog.md","lastUpdated":1747816703000}'),c={name:"otros/changelog.md"},h={id:"v0-8-1",tabindex:"-1"};function p(u,a,m,v,g,f){const l=o("Badge");return n(),r("div",null,[a[3]||(a[3]=e("h1",{id:"changelog",tabindex:"-1"},[i("Changelog "),e("a",{class:"header-anchor",href:"#changelog","aria-label":'Permalink to "Changelog"'},"​")],-1)),e("h2",h,[a[0]||(a[0]=i("v0.8.1 ")),d(l,{type:"tip",text:"Latest"}),a[1]||(a[1]=i()),a[2]||(a[2]=e("a",{class:"header-anchor",href:"#v0-8-1","aria-label":'Permalink to "v0.8.1 <Badge type="tip" text="Latest" />"'},"​",-1))]),a[4]||(a[4]=s('<ul><li>Complete refactoring of the library scanner</li><li>Add new version available tracker</li><li>Add new version available alert</li></ul><h2 id="v0-7-0" tabindex="-1">v0.7.0 <a class="header-anchor" href="#v0-7-0" aria-label="Permalink to &quot;v0.7.0&quot;">​</a></h2><ul><li>Add currently reading manga hero section</li><li>Add recently readded manga section</li><li>Add incognite reading mode</li></ul><h2 id="v0-6-0-beta" tabindex="-1">v0.6.0-beta <a class="header-anchor" href="#v0-6-0-beta" aria-label="Permalink to &quot;v0.6.0-beta&quot;">​</a></h2><ul><li>Add reading progress persist in local for real time reading</li><li>Add reading progress persist in DB for cross-device sync</li><li>Fix no updateable final user DB</li></ul><h2 id="v0-5-0-beta" tabindex="-1">v0.5.0-beta <a class="header-anchor" href="#v0-5-0-beta" aria-label="Permalink to &quot;v0.5.0-beta&quot;">​</a></h2><ul><li>Create <code>Dockerfile</code> for production</li><li>Create <code>compose.yml</code> file for production installation</li><li>Optimize Docker image size</li><li>Fix manga covers path in production</li><li>Optimize component logic of manga library, profile and settings sections</li><li>Downloadable database</li><li>Update translations</li></ul><h2 id="v0-4-0-alpha" tabindex="-1">v0.4.0-alpha <a class="header-anchor" href="#v0-4-0-alpha" aria-label="Permalink to &quot;v0.4.0-alpha&quot;">​</a></h2><ul><li>Add toast provider support</li><li>Create metadata extractor (<code>ComicInfo.xml</code> into CBZ files)</li><li>Add metadata scan button in settings page</li><li>Rendering metadata from DB into frontend</li><li>Change library components directory</li><li>Upate client-side components APIs</li><li>Add new api for full library scan</li></ul><h2 id="v0-3-0-alpha" tabindex="-1">v0.3.0-alpha <a class="header-anchor" href="#v0-3-0-alpha" aria-label="Permalink to &quot;v0.3.0-alpha&quot;">​</a></h2><ul><li>First manga reader version (support CBZ files)</li><li>Adjust complete library layout on mobile devices</li><li>Add new translations</li><li>Fix sort volumes and series by title and numbering</li><li>Fix custom fonts in Tailwind utils classes</li></ul><h2 id="v0-2-0-alpha" tabindex="-1">v0.2.0-alpha <a class="header-anchor" href="#v0-2-0-alpha" aria-label="Permalink to &quot;v0.2.0-alpha&quot;">​</a></h2><ul><li>Full manga library structure</li><li>Library path scan and indexing in DB</li><li>Mark as favorite function in series and volumes</li><li>Extract cover images from CBZ files</li><li>Mapping favorites series and volumes in Favorites page</li><li>Refactoring Server Side components (from fetch to Prisma)</li></ul><h2 id="v0-1-0-alpha" tabindex="-1">v0.1.0-alpha <a class="header-anchor" href="#v0-1-0-alpha" aria-label="Permalink to &quot;v0.1.0-alpha&quot;">​</a></h2><ul><li>UI/UX inicial</li><li>Sistema de login con JWT + cookies</li><li>Verificación de sesión activa y protección de rutas</li><li>CRUD completo para usuarios</li></ul>',15))])}const y=t(c,[["render",p]]);export{x as __pageData,y as default};
